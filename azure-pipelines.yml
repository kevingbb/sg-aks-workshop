# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- none

variables:
  ACRConnectionName: 'akskhacr'
  ACRLoginServer: 'akskhacr.azurecr.io'
  AquaImage: 'registry.aquasec.com/scanner:5.3'
  AquaManagementConsoleServiceConnection: 'aquasec'
  AquaRegistryConnection: 'aquasecregistry'
  WebRepository: 'imageclassifierweb'
  WorkerRepository: 'imageclassifierworker'

jobs:
- job: JobOne
  displayName: JobOne

  pool:
    vmImage: 'ubuntu-latest'

  steps:
  - task: Docker@2
    displayName: Aqua Registry Login
    inputs:
      containerRegistry: $(AquaRegistryConnection)
      command: login

  - task: Docker@2
    displayName: ACR Registry Login
    inputs:
      containerRegistry: $(ACRConnectionName)
      command: login

  - task: Docker@2
    displayName: 'Build Web'
    inputs:
      containerRegistry: $(ACRConnectionName)
      repository: '$(WebRepository)'
      command: build
      Dockerfile: app/Classifier.Web/Dockerfile
    enabled: true

  - task: Docker@2
    displayName: 'Build Worker'
    inputs:
      containerRegistry: $(ACRConnectionName)
      repository: '$(WorkerRepository)'
      command: build
      Dockerfile: app/Classifier.Worker/Dockerfile
    enabled: true

  - task: Docker@2
    displayName: 'Pull Aqua Scanner Image'
    inputs:
      command: pull
      arguments: $(AquaImage)

  - task: aquasecScanner@4
    displayName: 'Scan Image Web'
    inputs:
      image: '$(ACRLoginServer)/$(WebRepository):$(Build.BuildId)'
      register: false
      scanType: 'local'
      scanner: 'registry.aquasec.com/scanner:5.3'
      connection: $(AquaManagementConsoleServiceConnection)
      caCertificates: true

  - task: aquasecScanner@4
    displayName: 'Scan Image Worker'
    inputs:
      image: '$(ACRLoginServer)/$(WorkerRepository):$(Build.BuildId)'
      register: false
      scanType: local
      scanner: 'registry.aquasec.com/scanner:5.3'
      connection: $(AquaManagementConsoleServiceConnection)
      caCertificates: true

  - task: CmdLine@2
    displayName: 'Tag and Push Image to ACR'
    inputs:
      script: |
        docker tag $(ACRLoginServer)/$(WebRepository):$(Build.BuildId) $(ACRLoginServer)/$(WebRepository):latest
        docker push $(ACRLoginServer)/$(WebRepository):latest
        docker tag $(ACRLoginServer)/$(WorkerRepository):$(Build.BuildId) $(ACRLoginServer)/$(WorkerRepository):latest
        docker push $(ACRLoginServer)/$(WorkerRepository):latest
    enabled: true
